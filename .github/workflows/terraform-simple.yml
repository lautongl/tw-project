name: üèóÔ∏è Terraform Simple

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: "S3 bucket name"
        required: true
        type: string

env:
  TF_VERSION: "1.5.7"
  AWS_REGION: "us-east-1"
  # se seu Terraform exige "environment", fixei um padr√£o:
  ENVIRONMENT: "development-v0.1"

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      # ‚ö†Ô∏è Para teste: lendo das Repository Variables (Settings ‚Üí Variables ‚Üí Actions)
      AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ vars.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS (from repo variables)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform validate (no backend)
        working-directory: terraform
        run: |
          terraform init -backend=false
          terraform validate

      - name: Terraform init
        working-directory: terraform
        run: terraform init

      - name: Terraform apply
        working-directory: terraform
        run: |
          echo "Applying for bucket: ${{ github.event.inputs.bucket_name }} (env=${{ env.ENVIRONMENT }})"
          terraform apply -auto-approve \
            -var="bucket_name=${{ github.event.inputs.bucket_name }}" \
            -var="environment=${{ env.ENVIRONMENT }}"
